using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.IO;

// ReSharper disable CSharpWarnings::CS1587
///
/// The goal of this program is to take a romlist file (generated by MAME32) and compare
/// its entries with the list of files provided by the rompath passed as the argument.
/// It then renames the .zip files in the rompath to the friendly names supplied by the list.
/// 
/// This program was written to provide a friendlier name to each rom file, because some
/// emulators (e.g., RetroArch) do not provide a UI that sorts out the ROM names into a 
/// friendly list (like MAME32 does).
/// 
/// It is useless after all, because no emulator will play these renamed files. :/
/// 
// ReSharper restore CSharpWarnings::CS1587
namespace RomFilesRenamer
{
	class Program
	{
		static void Main(string[] args)
		{
			if (args.Length == 0)
			{
				Console.WriteLine("Usage: RomFilesRenamer <path_to_ROMS_folder>");
				return;
			}

			var mameList = Directory.EnumerateFiles(Directory.GetCurrentDirectory(), "mame32*.lst").ToList();

			if (!mameList.Any())
			{
				Console.WriteLine(
					"File 'mame32[xx].lst' not found in current directory!\nPlease provide this file prior to invoking RomFilesRenamer (use MAME32 'Export' functionality to generate a ROM list).");
				return;
			}

			var oldFiles = new List<string>();
			var newFiles = new List<string>();

			try
			{
				oldFiles = Directory.EnumerateFiles(args[0].ToString(), "*.zip").ToList();
			}
			catch (DirectoryNotFoundException)
			{
				Console.WriteLine("Invalid ROMs path!\nCheck whether the path informed points to your ROMs directory.");
				return;
			}

			if (oldFiles.Count == 0)
			{
				Console.WriteLine(
					"No .zip files found!\nPlease make sure the path informed points to a directory containing your .zip files.");
				return;
			}

			int successCounter = 0;
			using (System.IO.StreamReader mameFile = new System.IO.StreamReader(mameList[0]))
			{
				string line;

				while ((line = mameFile.ReadLine()) != null)
				{
					var romInfo = line.Split('\t');

					int romFileIndex = oldFiles.IndexOf(args[0] + "\\" + romInfo[0] + ".zip");

					if (romFileIndex >= 0)
					{
						newFiles.Add(args[0] + "\\" + romInfo[0] + ".zip|" + 
							oldFiles[romFileIndex].Replace(romInfo[0] + ".zip", 
							romInfo[1].Replace("/", "--") + ".zip"));
						
						successCounter++;
					}
				}
			}

			if (successCounter == 0)
			{
				Console.WriteLine("Found no matches in your ROMs path to the entries in your MAME32 ROMs list.\nNo file renaming was performed.");
				return;
			}

			if (oldFiles.Count != newFiles.Count)
				Console.WriteLine("\n** Warning: Some entries in your MAME32 ROMs list did not match any files in your ROMs directory. Those files will not be renamed.");

			string yesNoOption = string.Empty;

			while (true)
			{
				Console.Write(string.Format("About to rename {0} files. Proceed? [Y|N]", successCounter));
				yesNoOption = Console.ReadLine();

				if (yesNoOption.Trim().ToUpper() == "Y" || yesNoOption.Trim().ToUpper() == "N")
					break;
			}

			if (yesNoOption.Trim().ToUpper() == "Y")
			{
				Console.WriteLine();
				foreach (string file in newFiles)
				{
					var fileLocations = file.Split('|');

					Console.Write("Renaming file: " + fileLocations[0] + new String(' ', 80) + "\r");
					File.Move(fileLocations[0], fileLocations[1]);
				}
				Console.WriteLine(string.Format("Done! Successfully renamed {0} files.", successCounter));
			}
			else
				Console.WriteLine("No file renaming was performed. Program terminated.");
		}
	}
}
